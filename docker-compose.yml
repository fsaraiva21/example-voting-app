services:
  vote:
    build: ./vote
    command: python app.py
    depends_on:
      redis:
        condition: service_healthy 
    volumes:
      - ./vote:/app
    ports:
      - "5000:80"
    networks:
      - frontend-net
      - backend-net

  result:
    build: ./result
    command: nodemon server.js
    depends_on:
      db:
        condition: service_healthy 
    volumes:
      - ./result:/app
    ports:
      - "5001:80"
      - "5858:5858"
    networks:
      - frontend-net
      - backend-net

  worker:
    build:
      context: ./worker
    depends_on:
      redis:
        condition: service_healthy 
      db:
        condition: service_healthy 
    networks:
      - backend-net

  redis:
    image: redis:5.0-alpine3.10
    # Healthcheck bindmount
    volumes:
      - "./healthchecks:/healthchecks"
    healthcheck:
      test: /healthchecks/redis.sh
      interval: "5s"
    ports: 
      - "6379"
    networks:
      - backend-net

  postgres:
    image: postgres:9.4
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    # Persistent DB Volume + Healthcheck bindmount
    volumes:
      - "db-data:/var/lib/postgresql/data"
      - "./healthchecks:/healthchecks"
    healthcheck:
      test: /healthchecks/postgres.sh
      interval: "5s"
    networks:
      - backend-net

volumes:
  db-data:

# Create 2 networks to better isolate our DBs from front facing services 
networks:
  frontend-net:
  backend-net:
